<style>
		/**** YOU MAY ADD OR MODIFY CSS BELOW ****/

		#blue-box {
			height: 100px;
			width: 100px;
			background: blue;
			-webkit-transition: all 0.5s ease-in-out;
      -moz-transition: all 0.5s ease-in-out;
      -o-transition: all 0.5s ease-in-out;
      -ms-transition: all 0.5s ease-in-out;
      transition: all 0.5s ease-in-out;
		}

		#blue-box.clicked {
			height: 30px;
			width: 30px;
			border-radius: 50px;
			background: green;
		}
		
		/**** STOP MODIFYING HERE. ****/
</style>

<h2>Part 1 (5 points)</h2>
<p>Make the blue box such that when it is clicked, make it turn into a green 30x30 circle over a course of 2 seconds. </p>
<p> While this can be done with jQuery's animation capabilities, for simple transitions such as this, we should use <a href="http://www.css3.info/preview/css3-transitions/">CSS3 transitions</a>. To that end, <strong>make sure to use CSS3 transitions</strong> to achieve this. Yes you will still need to write some JS/jQuery since clicking the blue-box DIV needs to trigger the CSS3 transition.</p>
<p>Edit the page source to begin.</p>
<hr/>
<h2>Part 2 (5 points)</h2>
<p>
	3 seconds after the animation is done running (so 5 seconds after the box is clicked), make the blue area go back to its original state. Once again, the box/circle should be slowly animating over a course of 2 seconds.
</p>


<!-- You shouldn't (need to) modify this question div or its contents -->
<div class="question">
		<h2>Blue Box</h2>
		<div id="blue-box"></div>
</div>

<script>
    $(function() {

            /**** YOU MAY ADD OR MODIFY CODE BELOW ****/
            $('#blue-box').on('click', function(){
                $(this).toggleClass('clicked')
                setInterval(function(){
            	$('#blue-box.clicked').removeClass('clicked');
            }, 3000);
            })

        
            /**** STOP MODIFYING HERE. ****/
    });

</script>
